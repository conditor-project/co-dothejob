#!/bin/bash
################################################################################
#
# LoadISTEX / li-canvas / run
#
# Lanceur du module. Ne fait pas grand chose. Mais le fait plutôt pas mal.
#
# @author ISTEX Dev Team <istex@inist.fr>
#
################################################################################

REPCOURANT=$(cd $(dirname ${BASH_SOURCE[0]:-$0}) > /dev/null && pwd)

# ------------------------------------------------------------------------------
# Arguments de la ligne de commande
# ------------------------------------------------------------------------------
STANDALONE=1
HELP="Veuillez saisir les arguments d'appel tel que : './run <mode> <session>'\nModes disponibles : --standalone, --daemon\nExemple : './run --standalone EXEMPLE'"

if [ $# -eq 0 ]; then

	echo $HELP
	exit 1

elif [ $# -eq 1 ]; then

	echo -e $HELP
	exit 1

elif [ $# -eq 2 ]; then

	if [ $1 == "--daemon" ]; then

		STANDALONE=0

	elif [ $1 == "--standalone" ]; then

		STANDALONE=1

	else
		echo -e $HELP
		exit 1
	fi

	export ISTEX_SESSION="$2"

elif [ $# -gt 2 ]; then

	echo -e $HELP
	exit 1

fi

# ------------------------------------------------------------------------------
# Vérifie que le nom de la session ne contient pas de caractères non autorisés
# ------------------------------------------------------------------------------
echo $ISTEX_SESSION | grep -E "^[A-Z0-9_-]{4,}$" 1>/dev/null 2>/dev/null
if [ "$?" != 0 ]; then
  echo "Erreur : les caractères autorisés dans le nom de session sont [A-Z0-9_-]{4,}"
  exit 1
fi

# ------------------------------------------------------------------------------
# Conf
# ------------------------------------------------------------------------------
# Chargement de la conf. Exit si le fichier n'existe pas.
if [ -a $REPCOURANT/module.conf ]; then
	# Chargement de la conf
	source $REPCOURANT/module.conf
else
	# Fichier de conf absent : sortie
	echo "Erreur ! module.conf introuvable"
	echo "Fin."
	exit 1
fi

# ------------------------------------------------------------------------------
# Création de l'arbo spécifique à la session si elle n'existe pas
# ------------------------------------------------------------------------------
if [ ! -d $DIR_SESSIONS/$ISTEX_SESSION ]; then
	$DIR_SRC/install $ISTEX_SESSION
fi

# ------------------------------------------------------------------------------
# Renseignement de l'état du module -- Début du travail, pas fini, pas prêt
# ------------------------------------------------------------------------------
echo -n "0" > "$DIR_SESSIONS/$ISTEX_SESSION/ready"
echo -n "0" > "$DIR_SESSIONS/$ISTEX_SESSION/finished"

# ------------------------------------------------------------------------------
# Section standalone
# ------------------------------------------------------------------------------
# On fait le job sans lancer inotify (donc on quitte dès que "in" est vide)
if [ $STANDALONE -eq 1 ]; then
	find $DIR_IN/$ISTEX_SESSION -type l -o -type f |\
    $PARALLELCOMMANDLINE --joblog $DIR_LOGS/$ISTEX_SESSION/jobs.log "$MODULECOMMANDLINE {} $ISTEX_SESSION"
	echo "« in » est vide, on a fini, on s'en va..."
	# Renseignement de l'état du module -- Fin du travail, fini, pas prêt
	echo -n "0" > "$DIR_SESSIONS/$ISTEX_SESSION/ready"
	echo -n "1" > "$DIR_SESSIONS/$ISTEX_SESSION/finished"
	exit 0
fi

# @DEPRECATED !!!
# Capturer le signale CTRL+C et les autres et tue les processus fils
# ex: inotifywait et tous les li-script lancés par parallel
# trap "cd $REPCOURANT ; make kill-session ISTEX_SESSION=$ISTEX_SESSION ; exit" 0 1 2 3 15
# echo "Logging des perfs en cours... [CTRL-C pour arrêter]"

node --stack-size=32000 --max_old_space_size=4096 $MODULEROOT/src/fork.js
